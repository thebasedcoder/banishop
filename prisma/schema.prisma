// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique // This is the new link to Clerk
  name      String?
  email     String   @unique
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // These relations remain the same
  addresses Address[]
  orders    Order[]
}

model Address {
  id        String  @id @default(cuid())
  name      String
  street    String
  city      String
  zip       String
  isDefault Boolean @default(false)
  userId    String
  user      User    @relation(fields: [userId], references: [id])
}

model Product {
  id          String    @id @default(cuid())
  name        String
  description String
  price       Float
  image       String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  orderItems  OrderItem[]
}

model Order {
  id        String      @id @default(cuid())
  total     Float
  status    String // e.g., "PENDING", "COMPLETED"
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  quantity  Int
  price     Float // Price at the time of purchase
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
}